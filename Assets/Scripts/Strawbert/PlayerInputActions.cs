//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/InputSystem/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""49e41889-9ccd-4bc6-9656-6ab4440ef971"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""ef8cf5c9-18c1-49eb-9e02-7ed60e1f12be"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SecondaryMovement"",
                    ""type"": ""Value"",
                    ""id"": ""172a8b49-6808-4577-a44a-3bc5c9046ce7"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Primary Action"",
                    ""type"": ""Button"",
                    ""id"": ""00bbb649-7b2c-46f9-a457-f177330e298e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Secondary Action"",
                    ""type"": ""Button"",
                    ""id"": ""68f417f3-054c-40ca-8a5e-07efb93a1b1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""845174bf-9655-4f6d-93cc-509bd6cbbd1b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""36a838f3-1a78-49db-9ea2-90a65e76a730"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""493266c0-766b-4b6a-ae46-d81efe409833"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""94e2647b-4b45-4486-9cca-ce59d74b444b"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""8a1af9fc-93b8-48a8-af37-c746d4e607ce"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a9b7f2c9-23d7-4105-9193-fcb4a8af5437"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""675b06a5-d791-475f-890f-774392459e0a"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Secondary Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35707e84-8097-4a73-a0fa-391726fe7cbb"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Secondary Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2b77e9f-56b5-498a-adca-96128ee8bb63"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Primary Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ea08b36-3b44-44e8-8436-a126dd5670d6"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Primary Action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e72b9f5-00e2-4a34-b648-abd5c4722e1f"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""SecondaryMovement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GrassoAimV1"",
            ""id"": ""cdb9c3cf-afac-4832-9ebe-252717c73618"",
            ""actions"": [
                {
                    ""name"": ""Grasso"",
                    ""type"": ""Button"",
                    ""id"": ""a72e2cef-2ae5-41ce-a13a-5d8e34ccdbf9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrassoDirection"",
                    ""type"": ""Value"",
                    ""id"": ""f99099b7-211f-4716-a0dc-423e2bea8d11"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""175d009a-4750-4a4f-9f88-b1ca0f3c8172"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Grasso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""64ce0535-0379-4638-a6f0-4687dc58d561"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GrassoDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GrassoAimV2"",
            ""id"": ""c0247d18-cdaa-4f4a-ad0b-5262e08c772f"",
            ""actions"": [
                {
                    ""name"": ""Grasso"",
                    ""type"": ""Button"",
                    ""id"": ""74d0e3aa-e495-4af4-bd76-87aef12a6e91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrassoDirection"",
                    ""type"": ""Value"",
                    ""id"": ""a45f029c-1b41-4ccb-9699-9f36b5be8a0e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a4b54084-5935-48fa-8047-0831d0f96ac9"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Grasso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d55820bc-b40f-4501-a190-61df8af67942"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Grasso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1df2215-6159-47d1-a18a-126657ff64a1"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GrassoDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GrassoAimV3"",
            ""id"": ""20ce3d5a-feb2-457d-b070-566427669033"",
            ""actions"": [
                {
                    ""name"": ""Grasso"",
                    ""type"": ""Button"",
                    ""id"": ""2e94d041-57b6-455f-8f8a-e944281c39f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GrassoDirection"",
                    ""type"": ""Value"",
                    ""id"": ""5e2c1784-ca14-48ea-af57-fd6bfdc82f3e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ea222f4e-2588-4644-8070-bc0cc8c23f06"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Grasso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f77ab60-04b8-483b-b8a5-df3bc29fbb4e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Grasso"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ef8c5e7d-2bd6-42ee-b624-2cd1631ddac9"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""GrassoDirection"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movement = m_Player.FindAction("Movement", throwIfNotFound: true);
        m_Player_SecondaryMovement = m_Player.FindAction("SecondaryMovement", throwIfNotFound: true);
        m_Player_PrimaryAction = m_Player.FindAction("Primary Action", throwIfNotFound: true);
        m_Player_SecondaryAction = m_Player.FindAction("Secondary Action", throwIfNotFound: true);
        // GrassoAimV1
        m_GrassoAimV1 = asset.FindActionMap("GrassoAimV1", throwIfNotFound: true);
        m_GrassoAimV1_Grasso = m_GrassoAimV1.FindAction("Grasso", throwIfNotFound: true);
        m_GrassoAimV1_GrassoDirection = m_GrassoAimV1.FindAction("GrassoDirection", throwIfNotFound: true);
        // GrassoAimV2
        m_GrassoAimV2 = asset.FindActionMap("GrassoAimV2", throwIfNotFound: true);
        m_GrassoAimV2_Grasso = m_GrassoAimV2.FindAction("Grasso", throwIfNotFound: true);
        m_GrassoAimV2_GrassoDirection = m_GrassoAimV2.FindAction("GrassoDirection", throwIfNotFound: true);
        // GrassoAimV3
        m_GrassoAimV3 = asset.FindActionMap("GrassoAimV3", throwIfNotFound: true);
        m_GrassoAimV3_Grasso = m_GrassoAimV3.FindAction("Grasso", throwIfNotFound: true);
        m_GrassoAimV3_GrassoDirection = m_GrassoAimV3.FindAction("GrassoDirection", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movement;
    private readonly InputAction m_Player_SecondaryMovement;
    private readonly InputAction m_Player_PrimaryAction;
    private readonly InputAction m_Player_SecondaryAction;
    public struct PlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public PlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Player_Movement;
        public InputAction @SecondaryMovement => m_Wrapper.m_Player_SecondaryMovement;
        public InputAction @PrimaryAction => m_Wrapper.m_Player_PrimaryAction;
        public InputAction @SecondaryAction => m_Wrapper.m_Player_SecondaryAction;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @SecondaryMovement.started += instance.OnSecondaryMovement;
            @SecondaryMovement.performed += instance.OnSecondaryMovement;
            @SecondaryMovement.canceled += instance.OnSecondaryMovement;
            @PrimaryAction.started += instance.OnPrimaryAction;
            @PrimaryAction.performed += instance.OnPrimaryAction;
            @PrimaryAction.canceled += instance.OnPrimaryAction;
            @SecondaryAction.started += instance.OnSecondaryAction;
            @SecondaryAction.performed += instance.OnSecondaryAction;
            @SecondaryAction.canceled += instance.OnSecondaryAction;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @SecondaryMovement.started -= instance.OnSecondaryMovement;
            @SecondaryMovement.performed -= instance.OnSecondaryMovement;
            @SecondaryMovement.canceled -= instance.OnSecondaryMovement;
            @PrimaryAction.started -= instance.OnPrimaryAction;
            @PrimaryAction.performed -= instance.OnPrimaryAction;
            @PrimaryAction.canceled -= instance.OnPrimaryAction;
            @SecondaryAction.started -= instance.OnSecondaryAction;
            @SecondaryAction.performed -= instance.OnSecondaryAction;
            @SecondaryAction.canceled -= instance.OnSecondaryAction;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // GrassoAimV1
    private readonly InputActionMap m_GrassoAimV1;
    private List<IGrassoAimV1Actions> m_GrassoAimV1ActionsCallbackInterfaces = new List<IGrassoAimV1Actions>();
    private readonly InputAction m_GrassoAimV1_Grasso;
    private readonly InputAction m_GrassoAimV1_GrassoDirection;
    public struct GrassoAimV1Actions
    {
        private @PlayerInputActions m_Wrapper;
        public GrassoAimV1Actions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Grasso => m_Wrapper.m_GrassoAimV1_Grasso;
        public InputAction @GrassoDirection => m_Wrapper.m_GrassoAimV1_GrassoDirection;
        public InputActionMap Get() { return m_Wrapper.m_GrassoAimV1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GrassoAimV1Actions set) { return set.Get(); }
        public void AddCallbacks(IGrassoAimV1Actions instance)
        {
            if (instance == null || m_Wrapper.m_GrassoAimV1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GrassoAimV1ActionsCallbackInterfaces.Add(instance);
            @Grasso.started += instance.OnGrasso;
            @Grasso.performed += instance.OnGrasso;
            @Grasso.canceled += instance.OnGrasso;
            @GrassoDirection.started += instance.OnGrassoDirection;
            @GrassoDirection.performed += instance.OnGrassoDirection;
            @GrassoDirection.canceled += instance.OnGrassoDirection;
        }

        private void UnregisterCallbacks(IGrassoAimV1Actions instance)
        {
            @Grasso.started -= instance.OnGrasso;
            @Grasso.performed -= instance.OnGrasso;
            @Grasso.canceled -= instance.OnGrasso;
            @GrassoDirection.started -= instance.OnGrassoDirection;
            @GrassoDirection.performed -= instance.OnGrassoDirection;
            @GrassoDirection.canceled -= instance.OnGrassoDirection;
        }

        public void RemoveCallbacks(IGrassoAimV1Actions instance)
        {
            if (m_Wrapper.m_GrassoAimV1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGrassoAimV1Actions instance)
        {
            foreach (var item in m_Wrapper.m_GrassoAimV1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GrassoAimV1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GrassoAimV1Actions @GrassoAimV1 => new GrassoAimV1Actions(this);

    // GrassoAimV2
    private readonly InputActionMap m_GrassoAimV2;
    private List<IGrassoAimV2Actions> m_GrassoAimV2ActionsCallbackInterfaces = new List<IGrassoAimV2Actions>();
    private readonly InputAction m_GrassoAimV2_Grasso;
    private readonly InputAction m_GrassoAimV2_GrassoDirection;
    public struct GrassoAimV2Actions
    {
        private @PlayerInputActions m_Wrapper;
        public GrassoAimV2Actions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Grasso => m_Wrapper.m_GrassoAimV2_Grasso;
        public InputAction @GrassoDirection => m_Wrapper.m_GrassoAimV2_GrassoDirection;
        public InputActionMap Get() { return m_Wrapper.m_GrassoAimV2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GrassoAimV2Actions set) { return set.Get(); }
        public void AddCallbacks(IGrassoAimV2Actions instance)
        {
            if (instance == null || m_Wrapper.m_GrassoAimV2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GrassoAimV2ActionsCallbackInterfaces.Add(instance);
            @Grasso.started += instance.OnGrasso;
            @Grasso.performed += instance.OnGrasso;
            @Grasso.canceled += instance.OnGrasso;
            @GrassoDirection.started += instance.OnGrassoDirection;
            @GrassoDirection.performed += instance.OnGrassoDirection;
            @GrassoDirection.canceled += instance.OnGrassoDirection;
        }

        private void UnregisterCallbacks(IGrassoAimV2Actions instance)
        {
            @Grasso.started -= instance.OnGrasso;
            @Grasso.performed -= instance.OnGrasso;
            @Grasso.canceled -= instance.OnGrasso;
            @GrassoDirection.started -= instance.OnGrassoDirection;
            @GrassoDirection.performed -= instance.OnGrassoDirection;
            @GrassoDirection.canceled -= instance.OnGrassoDirection;
        }

        public void RemoveCallbacks(IGrassoAimV2Actions instance)
        {
            if (m_Wrapper.m_GrassoAimV2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGrassoAimV2Actions instance)
        {
            foreach (var item in m_Wrapper.m_GrassoAimV2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GrassoAimV2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GrassoAimV2Actions @GrassoAimV2 => new GrassoAimV2Actions(this);

    // GrassoAimV3
    private readonly InputActionMap m_GrassoAimV3;
    private List<IGrassoAimV3Actions> m_GrassoAimV3ActionsCallbackInterfaces = new List<IGrassoAimV3Actions>();
    private readonly InputAction m_GrassoAimV3_Grasso;
    private readonly InputAction m_GrassoAimV3_GrassoDirection;
    public struct GrassoAimV3Actions
    {
        private @PlayerInputActions m_Wrapper;
        public GrassoAimV3Actions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Grasso => m_Wrapper.m_GrassoAimV3_Grasso;
        public InputAction @GrassoDirection => m_Wrapper.m_GrassoAimV3_GrassoDirection;
        public InputActionMap Get() { return m_Wrapper.m_GrassoAimV3; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GrassoAimV3Actions set) { return set.Get(); }
        public void AddCallbacks(IGrassoAimV3Actions instance)
        {
            if (instance == null || m_Wrapper.m_GrassoAimV3ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GrassoAimV3ActionsCallbackInterfaces.Add(instance);
            @Grasso.started += instance.OnGrasso;
            @Grasso.performed += instance.OnGrasso;
            @Grasso.canceled += instance.OnGrasso;
            @GrassoDirection.started += instance.OnGrassoDirection;
            @GrassoDirection.performed += instance.OnGrassoDirection;
            @GrassoDirection.canceled += instance.OnGrassoDirection;
        }

        private void UnregisterCallbacks(IGrassoAimV3Actions instance)
        {
            @Grasso.started -= instance.OnGrasso;
            @Grasso.performed -= instance.OnGrasso;
            @Grasso.canceled -= instance.OnGrasso;
            @GrassoDirection.started -= instance.OnGrassoDirection;
            @GrassoDirection.performed -= instance.OnGrassoDirection;
            @GrassoDirection.canceled -= instance.OnGrassoDirection;
        }

        public void RemoveCallbacks(IGrassoAimV3Actions instance)
        {
            if (m_Wrapper.m_GrassoAimV3ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGrassoAimV3Actions instance)
        {
            foreach (var item in m_Wrapper.m_GrassoAimV3ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GrassoAimV3ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GrassoAimV3Actions @GrassoAimV3 => new GrassoAimV3Actions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnSecondaryMovement(InputAction.CallbackContext context);
        void OnPrimaryAction(InputAction.CallbackContext context);
        void OnSecondaryAction(InputAction.CallbackContext context);
    }
    public interface IGrassoAimV1Actions
    {
        void OnGrasso(InputAction.CallbackContext context);
        void OnGrassoDirection(InputAction.CallbackContext context);
    }
    public interface IGrassoAimV2Actions
    {
        void OnGrasso(InputAction.CallbackContext context);
        void OnGrassoDirection(InputAction.CallbackContext context);
    }
    public interface IGrassoAimV3Actions
    {
        void OnGrasso(InputAction.CallbackContext context);
        void OnGrassoDirection(InputAction.CallbackContext context);
    }
}
